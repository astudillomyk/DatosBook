 
---
title: "C√≥digo Clasificador d√≠a/noche"
format:
  html:
    css: clasificador.css
    code-overflow: scroll

toc: true
toc-location: right
toc-depth: 2
---
Esta aplicaci√≥n captura video en tiempo real desde la c√°mara del usuario y utiliza un modelo de aprendizaje autom√°tico, cargado desde Teachable Machine, 
para clasificar cada cuadro del video como "d√≠a" o "noche". 
El resultado de la clasificaci√≥n se muestra en la pantalla junto con un emoji representativo: un sol para "d√≠a" y una luna para "noche". 
Adem√°s, la aplicaci√≥n ofrece un bot√≥n que permite reiniciar la c√°mara, reiniciando la captura de video y volviendo a clasificar el entorno. 
Toda la interfaz est√° dise√±ada para actualizarse en tiempo real, proporcionando una experiencia interactiva y visualmente intuitiva para el usuario.

### 1. Definici√≥n de Variables

```javascript
let video;
let classifier;
let modelLoaded = 'https://teachablemachine.withgoogle.com/models/bXy2kDNi/';
let label = 'esperando...';
let resetButton;
```

- **`video`**: Esta variable guardar√° la captura de video en vivo desde la c√°mara.
- **`classifier`**: Guardar√° el clasificador de im√°genes que se utilizar√° para identificar si es "d√≠a" o "noche".
- **`modelLoaded`**: Es la URL donde se encuentra el modelo de aprendizaje autom√°tico que vamos a utilizar.
- **`label`**: Almacena la etiqueta (texto) que indica si es "d√≠a" o "noche". Inicialmente se establece como "esperando...".
- **`resetButton`**: Esta variable guardar√° el bot√≥n que se usar√° para reiniciar la c√°mara.

### 2. Cargar el Modelo

```javascript
function preload() {
  classifier = ml5.imageClassifier(modelLoaded);
}
```

- **`preload()`**: Es una funci√≥n que se ejecuta antes que cualquier otra cosa en el programa. Aqu√≠, se carga el modelo de aprendizaje autom√°tico desde la URL que definimos antes en `modelLoaded` y se guarda en `classifier`.

### 3. Configurar el Entorno

```javascript
function setup() {
  createCanvas(640, 520); // Ajustar la altura del lienzo para que se ajuste al video
  
  // Crear el video
  video = createCapture(VIDEO);
  video.size(640, 480); // Ajustar el tama√±o del video para que se ajuste al ancho del lienzo
  video.hide();

  // PASO 2: Comenzar a clasificar
  classifyVideo();
}
```

- **`setup()`**: Esta funci√≥n se ejecuta una vez al principio del programa.
  - **`createCanvas(640, 520)`**: Crea un espacio (lienzo) de 640x520 p√≠xeles en donde se mostrar√° el video y otros elementos.
  - **`video = createCapture(VIDEO)`**: Inicia la captura de video desde la c√°mara.
  - **`video.size(640, 480)`**: Ajusta el tama√±o del video para que encaje dentro del lienzo.
  - **`video.hide()`**: Oculta el elemento HTML del video, ya que lo vamos a dibujar manualmente en el lienzo.
  - **`classifyVideo()`**: Inicia el proceso de clasificaci√≥n del video en vivo.

### 4. Clasificar el Video

```javascript
function classifyVideo() {
  classifier.classify(video, gotResults);
}
```

- **`classifyVideo()`**: Esta funci√≥n utiliza el clasificador (`classifier`) para analizar el video y determinar si es "d√≠a" o "noche". Cuando se obtienen resultados, se llama a la funci√≥n `gotResults()`.

### 5. Dibujar el Video y la Etiqueta

```javascript
function draw() {
  // Dibujar el video
  image(video, 0, 0);

  // PASO 4: Dibujar la etiqueta
  textSize(30);
  textAlign(CENTER, CENTER);
  fill(255);
  text(label, width / 2, height - 16);

  // Elegir un emoji, el "predeterminado" es un marcador de posici√≥n
  let emoji = "ü´∑"; // Emoji predeterminado
  if (label == "nighttime") {
    emoji = "‚òΩ"; // Emoji para la noche
  } else if (label == "daytime") {
    emoji = "üåû"; // Emoji para el d√≠a
  }

  // Dibujar el emoji
  textSize(256);
  text(emoji, width / 2, height / 2);
}
```

- **`draw()`**: Esta funci√≥n se ejecuta continuamente (muchas veces por segundo) y se encarga de dibujar en el lienzo.
  - **`image(video, 0, 0)`**: Dibuja el video en vivo en la esquina superior izquierda del lienzo.
  - **`text(label, width / 2, height - 16)`**: Dibuja la etiqueta (por ejemplo, "d√≠a" o "noche") centrada en la parte inferior del lienzo.
  - **`text(emoji, width / 2, height / 2)`**: Dibuja un emoji grande en el centro del lienzo. El emoji cambia seg√∫n si la etiqueta indica "d√≠a" o "noche".

### 6. Obtener los Resultados

```javascript
function gotResults(error, results) {
  // Si algo sali√≥ mal
  if (error) {
    console.error(error);
    return;
  }
  // Actualizar la etiqueta con el resultado del clasificador
  label = results[0].label;
}
```

- **`gotResults()`**: Esta funci√≥n recibe los resultados de la clasificaci√≥n. Si hay un error, lo muestra en la consola. Si la clasificaci√≥n es exitosa, actualiza la etiqueta (`label`) con el resultado, que puede ser "d√≠a" o "noche".

### 7. Reiniciar la C√°mara

```javascript
function resetCamera() {
  video.remove();  // Eliminar la captura de video actual
  video = createCapture(VIDEO); // Reiniciar la captura de video
  video.size(640, 480); // Asegurar que el nuevo video tenga el tama√±o correcto
  video.hide();
  classifyVideo();  // Reiniciar la clasificaci√≥n
}
```

- **`resetCamera()`**: Esta funci√≥n se usa para reiniciar la captura de video. Elimina la captura actual y la reinicia, asegur√°ndose de que el nuevo video tenga el tama√±o correcto, y luego reinicia el proceso de clasificaci√≥n.

### Resumen
Este c√≥digo toma un video en vivo desde la c√°mara, lo procesa usando un modelo de aprendizaje autom√°tico, y determina si la escena capturada es "d√≠a" o "noche", mostrando un emoji correspondiente en el centro del video. Es un ejemplo simple pero poderoso de c√≥mo se puede usar la programaci√≥n para interactuar con tecnolog√≠a de aprendizaje autom√°tico en tiempo real.